 docker build -t activemq:5.15.6 --build-arg BROKER_NAME=broker1 .

B1:
Master:
docker run -d --name b1 -p 61616:61616 -p 8161:8161 -v $PWD/broker1/conf/activemq.xml:/opt/activemq/conf/activemq.xml -v $PWD/broker1/data:/opt/activemq/data activemq:5.15.6
docker network connect bunit b1

Slave:
docker run -d --name b3 -p 61636:61616 -p 8163:8161 -v $PWD/broker1/conf/activemq.xml:/opt/activemq/conf/activemq.xml -v $PWD/broker1/data:/opt/activemq/data activemq:5.15.6
docker network connect bunit b3

B2:
Master:
docker run -d --name b2 -p 61626:61626 -p 8162:8161 -v $PWD/broker2/conf/activemq.xml:/opt/activemq/conf/activemq.xml -v $PWD/broker2/data:/opt/activemq/data activemq:5.15.6
docker network connect bunit b2

Slave:
docker run -d --name b4 -p 61646:61626 -p 8164:8161 -v $PWD/broker2/conf/activemq.xml:/opt/activemq/conf/activemq.xml -v $PWD/broker2/data:/opt/activemq/data activemq:5.15.6
docker network connect bunit b4


NGNX
docker run -d -v /Users/javabrain/Documents/MyWorkspace/terraform_infra/ActiveMQ/nginx/nginx.conf:/etc/nginx/nginx.conf -v /Users/javabrain/Documents/MyWorkspace/terraform_infra/ActiveMQ/nginx/proxy.conf:/etc/nginx/proxy.conf --name ngnx -p 80:80 -p 616:61616  -p 626:61626 nginx:latest
docker network connect bunit ngnx




SWARM:
docker swarm init
docker service create --name b1 -p 61616:61616 -p 8161:8161 --replicas 2 activemq:5.15.6
docker ps
docker service ls
docker service rm b1
docker swarm leave --force